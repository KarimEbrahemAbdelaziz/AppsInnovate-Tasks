//
//  ViewController.swift
//  MapTask
//  In this task i used Google Maps SDK to handle Maps requests, and for random location
//      i generated random numbers between two numbers by custom function.
//      i could use also Google Places API too to get random places based on user location :)
//      if there is any error or any thing is unclear please tell me :)
//  Created by KARIM on 6/26/17.
//  Copyright Â© 2017 KARIM. All rights reserved.
//

import UIKit
import CoreLocation
import GoogleMaps

class ViewController: UIViewController, CLLocationManagerDelegate {

    let locationManager = CLLocationManager()
    var location = CLLocation()
    var mapView: GMSMapView?
    var marker = GMSMarker()
    
    @IBOutlet weak var mapV: UIView!
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        
        // Google Maps Service API Key, it's generated by google to allow me to use this SDK
        GMSServices.provideAPIKey("AIzaSyCuNUgL0hqJpwMDmkHUyL9uzXniEYBE6fg")
        
        // i set this VC as delegate to location manager so that i can get accurete location
        // and when user moves i will have all time current location in location variable
        // so i can track user every time, just jandle it in delegate function :)
        locationManager.delegate = self
        locationManager.desiredAccuracy = kCLLocationAccuracyBest
        locationManager.requestWhenInUseAuthorization()
        locationManager.startUpdatingLocation()
        
        // set random location when view is loaded
        let camera = GMSCameraPosition.camera(withLatitude: 28, longitude: 31, zoom: 6.0)
        mapView = GMSMapView.map(withFrame: CGRect.zero, camera: camera)
        view = mapView
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        // get current location of the user all the time :)
        location = locations[0]
    }
    
    
    @IBAction func getMyLocation(_ sender: UIBarButtonItem) {
        
        mapView?.camera = GMSCameraPosition.camera(withLatitude: location.coordinate.latitude, longitude: location.coordinate.longitude, zoom: 6.0)
        
        marker.position = CLLocationCoordinate2D(latitude: location.coordinate.latitude, longitude: location.coordinate.longitude)
        marker.title = "Some Dummy Data"
        marker.snippet = "Some Dummy Data To Show Here !!"
        marker.map = mapView
        
        view = mapView
        
    }

    @IBAction func getRandomLocation(_ sender: UIBarButtonItem) {
        
        // clear the map from any marker that had been seted on it
        mapView?.clear()
        
        mapView?.camera = GMSCameraPosition.camera(withLatitude: CLLocationDegrees(randomBetweenNumbers(firstNum: 23, secondNum: 28)), longitude: CLLocationDegrees(randomBetweenNumbers(firstNum: 31, secondNum: 33)), zoom: 6.0)
        
        marker.position = CLLocationCoordinate2D(latitude: CLLocationDegrees(randomBetweenNumbers(firstNum: 23, secondNum: 30)), longitude: CLLocationDegrees(randomBetweenNumbers(firstNum: 25, secondNum: 33)))
        marker.title = "Some Dummy Data"
        marker.snippet = "Some Dummy Data To Show Here !!"
        marker.map = mapView
        
        view = mapView
    }
    
    // this function generate random float numbers
    func randomBetweenNumbers(firstNum: Float, secondNum: Float) -> Float{
        return Float(arc4random()) / Float(UINT32_MAX) * abs(firstNum - secondNum) + min(firstNum, secondNum)
    }

}

